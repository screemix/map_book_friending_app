name: CI/CD

on:
  push:
    branches: [ dev-ops ]

jobs:
  tests:
    runs-on: ubuntu-latest
#    env:
#      USER_LOGIN: ${{ secrets.USER_LOGIN }}
#      USER_PASS: ${{ secrets.USER_PASS }}
    steps:
      - uses: actions/checkout@v2
      - run: python3 -m venv .
      - run: pip install -r backend/requirements.txt
      - run: echo ${{ secrets.MONGODB}} >> backend/app/database_url
      - run: echo "http://3.120.99.44:8000" >> frontend/.env
      - working-directory: backend/app
        run: pytest


#  build_and_publish:
#    runs-on: ubuntu-latest
#    steps:
#      -
#        name: checoutdocker
#        uses: actions/checkout@v2
#      -
#        uses: satackey/action-docker-layer-caching@v0.0.11
#        # Ignore the failure of a step and avoid terminating the job.
#        continue-on-error: true
#      -
#        name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#      -
#        name: build and publish backend
#        working-directory: ./backend
#        run: docker build . --file Dockerfile --tag frodan/map_back && docker push frodan/map_back
#      -
#        name: build and publish frontend
#        working-directory: ./frontend
#        run: docker build . --file Dockerfile --tag frodan/map_front && docker push frodan/map_front
  aws_run:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: executing ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST}}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          script: |
            rm -rf map_book_friending_app
            git clone -b dev-ops https://github.com/screemix/map_book_friending_app.git
            cd map_book_friending_app
            echo ${{ secrets.MONGODB}} >> backend/database_url
            sudo docker-compose down
            sudo docker-compose -f docker-compose.yml up --build -d

